#summary Document describes how to upload to ifile.it using the api
#labels Phase-Implementation

==Introduction==

Uploading to ifile.it via API is very simple process consisting of two steps:
  # Determine upload url, we discover which upload server (if any) is accepting uploads
  # We upload the file via HTTP POST request to the upload url fetched in step 1 above

<br><br>
----

===Step1 - Determine upload url===
*Request URL*
{{{
http://ifile.it/api-fetch_upload_url.api
}}}

<br>
<br>
*HTTP GET parameters*
|| *parameter name* || *optional* || *type* || *possible values* || *default value* || *description* || 
|| response || yes || string || json<br/>text || json || In what format the API response should be ||

<br>
<br>
*HTTP POST parameters*

_none_

<br>
<br>
* API response parameters *
|| *parameter name* || *type* || *possible values* || *description* || 
|| status || string || ok<br>error || Whether the request was successful, error message parameter shown on error ||
|| server_id || int||  || The unique id of the server,<br>example: i<b>71</b>.ifile.it ||
|| upload_url || string ||  || The url to which you can upload your file (see step 2 below)<br>example: http://i<b>71</b>.ifile.it/upload ||

<br><br><br>
----

===Step2 - Upload file===
*Request URL*
{{{
http://i123.ifile.it/upload
}}}
Where the request URL is determined in step 1 above

<br>
<br>
*HTTP GET parameters*
|| *parameter name* || *optional* || *type* || *possible values* || *default value* || *description* || 
|| response || yes || string || json<br/>text || json || In what format the API response should be ||

<br>
<br>
*HTTP POST parameters*
|| *parameter name* || *optional* || *type* || *possible values* || *default value* || *description* || 
|| Filedata || no || string ||  ||  || The file to upload ||
|| akey || yes || string ||  ||  || apikey of the account to which this file is to be added to (see [FetchApikey]) ||

Please note: if you do not provide an "akey" as a POST parameter then the file will be uploaded as anonymous user and not attached to an account

<br>
<br>
* API response parameters *
|| *parameter name* || *type* || *possible values* || *description* || 
|| status || string || ok<br>error || Whether the request was successful, error message parameter shown on error ||
|| ukey || string ||  || The unique identifier for a file (what is [Ukey] ?) ||
|| name || string ||  || Name for the file uploaded ||
|| size || int ||  || File size in bytes ||
|| mime || string ||  || File [http://en.wikipedia.org/wiki/MIME mimetype] ||
|| md5 || string ||  || File [http://en.wikipedia.org/wiki/Md5sum md5] checksum ||

<br><br><br>
----
===Sample Code in PHP===
Using the official PHP api wrapper, see [http://code.google.com/p/ifileit/downloads/list Downloads]
{{{
<?php

/**
 * this example code snipppet tries to upload a file
 */

//set error reporting and include our api class
error_reporting(E_ALL); ini_set( 'display_errors', 'On' );
require_once( 'IfileApi.php' ); //in same directory as this example script


//create api model
$IfileApi = new IfileApi();

//test filepath to the file to upload
$filepath	=	'/PATH/TO/test.file';






try {
	
	$upload = $IfileApi->upload(
		$filepath
	);
	
	print 'uploaded: http://ifile.it/'.$upload['ukey'].'/'.rawurlencode( $upload['name'] )."\n\n";
	
	//output our response response array to see its structure
	print print_r( $upload,true );
	
}
catch ( IfileApiException $e){
	
	print 'IfileApiException > '.$e->getMessage();
}

?>
}}}